{"ast":null,"code":"var _jsxFileName = \"/Users/john/Documents/remesh_clone/remesh_clone_fe/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport ConvoDetail from \"./components/ConvoDetail\";\nimport NavBar from \"./components/navBar\";\nimport \"./App.css\";\nimport { Container, Row, Col, Card, Modal, Form, Button, InputGroup } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedDate = date => {\n      this.setState;\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const post_content = event.target.elements.post_content.value;\n      const boast_or_roast = event.target.elements.boast_or_roast.value;\n      axios.post(\"http://localhost:8000/api/posts/\", {\n        post_content: post_content,\n        boast_or_roast: boast_or_roast\n      });\n      axios.get(\"http://localhost:8000/api/posts/\").then(response => {\n        const posts = response.data;\n        this.setState({\n          posts,\n          message: \"\"\n        });\n      });\n    };\n\n    this.onHandleChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.getConvoDetail = (convoId, convoTitle) => {\n      console.log(convoId); // console.log(event)\n      // event.preventDefault();\n\n      axios.get(`http://localhost:8000/api/messages/${convoId}`).then(response => {\n        const messages = response.data;\n        this.setState({\n          messages: messages,\n          activeConvo: convoTitle,\n          isMessages: true\n        });\n      });\n    };\n\n    this.getMessageDetail = (messId, messTitle) => {\n      console.log(messId); // console.log(event)\n      // event.preventDefault();\n\n      axios.get(`http://localhost:8000/api/thoughts/${messId}`).then(response => {\n        const thoughts = response.data;\n        this.setState({\n          thoughts: thoughts,\n          activeMess: messTitle,\n          isThoughts: true\n        });\n      });\n    };\n\n    this.handleDownVote = postId => {\n      axios.post(`http://localhost:8000/api/posts/${postId}/down_vote/`, {\n        pk: postId\n      });\n      axios.get(\"http://localhost:8000/api/posts/\").then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.handleFeed = feedName => {\n      axios.get(`http://localhost:8000/api/${feedName}/`).then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.toggleNewConvo = () => {\n      if (this.state.isCreateConvo) {\n        this.setState({\n          isCreateConvo: false\n        });\n      } else {\n        this.setState({\n          isCreateConvo: true\n        });\n      }\n    };\n\n    this.showModal = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.state = {\n      isCreateConvo: false,\n      isMessages: false,\n      isThoughts: false,\n      conversations: [],\n      messages: [],\n      thoughts: [],\n      isOpen: false,\n      setIsOpen: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/conversations/\").then(response => {\n      const conversations = response.data;\n      this.setState({\n        conversations\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"New Conversation\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, this.state.isCreateConvo && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 42\n      }\n    }, \"ffff\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, this.state.conversations.map(convo => /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"18rem\",\n        margin: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"intro1.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => {\n        this.getConvoDetail(convo.id, convo.title);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, convo.title))), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, convo.start_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, convo.id)))))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, this.state.messages && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, this.state.isMessages && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"Messages from: \", this.state.activeConvo), this.state.messages.map(mess => /*#__PURE__*/React.createElement(\"div\", {\n      key: mess.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => {\n        this.getMessageDetail(mess.id, mess.message);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, mess.message), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }), mess.submission_time, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }), mess.id)))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, this.state.thoughts && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, this.state.isThoughts && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"Thoughts from: \", this.state.activeMess), this.state.thoughts.map(thought => /*#__PURE__*/React.createElement(\"div\", {\n      key: thought.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, thought.thought, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }), thought.submission_time)))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.isOpen,\n      onHide: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"New Conversation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"1\",\n      maxLength: \"100\",\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: selectedDate,\n      onChange: date => setSelectedDate(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \"Save\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/john/Documents/remesh_clone/remesh_clone_fe/src/App.js"],"names":["React","axios","ConvoDetail","NavBar","Container","Row","Col","Card","Modal","Form","Button","InputGroup","BrowserRouter","Router","Route","Link","DatePicker","App","Component","constructor","props","setSelectedDate","date","setState","handleFormSubmit","event","preventDefault","post_content","target","elements","value","boast_or_roast","post","get","then","response","posts","data","message","onHandleChange","e","getConvoDetail","convoId","convoTitle","console","log","messages","activeConvo","isMessages","getMessageDetail","messId","messTitle","thoughts","activeMess","isThoughts","handleDownVote","postId","pk","handleFeed","feedName","toggleNewConvo","state","isCreateConvo","showModal","isOpen","hideModal","conversations","setIsOpen","componentDidMount","render","map","convo","width","margin","id","title","start_date","mess","submission_time","thought","selectedDate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport ConvoDetail from \"./components/ConvoDetail\";\nimport NavBar from \"./components/navBar\";\nimport \"./App.css\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Modal,\n  Form,\n  Button,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCreateConvo: false,\n      isMessages: false,\n      isThoughts: false,\n      conversations: [],\n      messages: [],\n      thoughts: [],\n      isOpen: false,\n      setIsOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/conversations/\").then((response) => {\n      const conversations = response.data;\n      this.setState({ conversations });\n    });\n  }\n  setSelectedDate = date => {\n    this.setState\n  }\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const post_content = event.target.elements.post_content.value;\n    const boast_or_roast = event.target.elements.boast_or_roast.value;\n    axios.post(\"http://localhost:8000/api/posts/\", {\n      post_content: post_content,\n      boast_or_roast: boast_or_roast,\n    });\n    axios.get(\"http://localhost:8000/api/posts/\").then((response) => {\n      const posts = response.data;\n      this.setState({ posts, message: \"\" });\n    });\n  };\n\n  onHandleChange = (e) => {\n    this.setState({\n      message: e.target.value,\n    });\n  };\n\n  getConvoDetail = (convoId, convoTitle) => {\n    console.log(convoId);\n    // console.log(event)\n    // event.preventDefault();\n    axios\n      .get(`http://localhost:8000/api/messages/${convoId}`)\n      .then((response) => {\n        const messages = response.data;\n        this.setState({\n          messages: messages,\n          activeConvo: convoTitle,\n          isMessages: true,\n        });\n      });\n  };\n\n  getMessageDetail = (messId, messTitle) => {\n    console.log(messId);\n    // console.log(event)\n    // event.preventDefault();\n    axios\n      .get(`http://localhost:8000/api/thoughts/${messId}`)\n      .then((response) => {\n        const thoughts = response.data;\n        this.setState({\n          thoughts: thoughts,\n          activeMess: messTitle,\n          isThoughts: true,\n        });\n      });\n  };\n\n  handleDownVote = (postId) => {\n    axios.post(`http://localhost:8000/api/posts/${postId}/down_vote/`, {\n      pk: postId,\n    });\n    axios.get(\"http://localhost:8000/api/posts/\").then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n\n  handleFeed = (feedName) => {\n    axios.get(`http://localhost:8000/api/${feedName}/`).then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n\n  toggleNewConvo = () => {\n    if (this.state.isCreateConvo) {\n      this.setState({\n        isCreateConvo: false,\n      });\n    } else {\n      this.setState({\n        isCreateConvo: true,\n      });\n    }\n  };\n\n  showModal = () => {\n    this.setState({\n      isOpen: true,\n    });\n  };\n  hideModal = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n  render() {\n    return (\n      <Container fluid>\n        <NavBar />\n        <Container fluid>\n          <Row>\n            <a href=\"#\" onClick={this.showModal}>\n              <h1>New Conversation</h1>\n            </a>\n          </Row>\n          <Row>\n            {this.state.isCreateConvo && <div>ffff</div>}\n            <Col sm={4}>\n              {this.state.conversations.map((convo) => (\n                <Card style={{ width: \"18rem\", margin: \"40px\" }}>\n                  <Card.Img variant=\"top\" src=\"intro1.jpg\" />\n                  <Card.Body>\n                    <Card.Title>\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          this.getConvoDetail(convo.id, convo.title);\n                        }}\n                      >\n                        <h1>{convo.title}</h1>\n                      </a>\n                    </Card.Title>\n                    <Card.Text>\n                      <h3>{convo.start_date}</h3>\n                      <p>{convo.id}</p>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              ))}\n            </Col>\n            <Col sm={4}>\n              {this.state.messages && (\n                <div>\n                  {this.state.isMessages && (\n                    <h3>Messages from: {this.state.activeConvo}</h3>\n                  )}\n                  {this.state.messages.map((mess) => (\n                    <div key={mess.id}>\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          this.getMessageDetail(mess.id, mess.message);\n                        }}\n                      >\n                        {mess.message}\n                      </a>\n                      <br></br>\n                      {mess.submission_time}\n                      <br></br>\n                      {mess.id}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Col>\n            <Col sm={4}>\n              {this.state.thoughts && (\n                <div>\n                  {this.state.isThoughts && (\n                    <h3>Thoughts from: {this.state.activeMess}</h3>\n                  )}\n                  {this.state.thoughts.map((thought) => (\n                    <div key={thought.id}>\n                      {thought.thought}\n                      <br></br>\n                      {thought.submission_time}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Col>\n            <Modal show={this.state.isOpen} onHide={this.hideModal}>\n              <Modal.Header>\n                <Modal.Title>New Conversation</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form onSubmit={this.handleFormSubmit}>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows=\"1\"\n                      maxLength=\"100\"\n                      name=\"title\"\n                    />\n                    <DatePicker selected={selectedDate} onChange={date => setSelectedDate(date)} />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <button onClick={this.hideModal}>Cancel</button>\n                <button>Save</button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}