{"ast":null,"code":"var _jsxFileName = \"/Users/john/Documents/remesh_clone/remesh_clone_fe/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport ConvoDetail from \"./components/ConvoDetail\";\nimport NavBar from \"./components/navBar\";\nimport \"./App.css\";\nimport { Container, Row, Col, Card, Modal, Form, Button, InputGroup } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport DatePickerComponent from \"./components/DatePicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ConvoModal from \"./components/convoModal\";\nimport MessageModal from \"./components/messageModal\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedDate = date => {\n      this.setState({\n        selectedDate: date\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const title = event.target.elements.title.value;\n      const start_date = event.target.elements.date.value;\n      console.log(start_date);\n      axios.post(\"http://localhost:8000/api/conversations/\", {\n        title: title,\n        start_date: start_date,\n        isOpenConvo: false\n      });\n      axios.get(\"http://localhost:8000/api/conversations/\").then(response => {\n        const conversations = response.data;\n        this.setState({\n          conversations\n        });\n      });\n    };\n\n    this.onHandleChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.getConvoDetail = (convoId, convoTitle) => {\n      console.log(convoId); // console.log(event)\n      // event.preventDefault();\n\n      axios.get(`http://localhost:8000/api/messages/${convoId}`).then(response => {\n        const messages = response.data;\n        this.setState({\n          messages: messages,\n          activeConvo: convoTitle,\n          isMessages: true,\n          currConvoId: convoId\n        });\n      });\n    };\n\n    this.getMessageDetail = (messId, messTitle) => {\n      console.log(messId); // console.log(event)\n      // event.preventDefault();\n\n      axios.get(`http://localhost:8000/api/thoughts/${messId}`).then(response => {\n        const thoughts = response.data;\n        this.setState({\n          thoughts: thoughts,\n          activeMess: messTitle,\n          isThoughts: true\n        });\n      });\n    };\n\n    this.handleDownVote = postId => {\n      axios.post(`http://localhost:8000/api/posts/${postId}/down_vote/`, {\n        pk: postId\n      });\n      axios.get(\"http://localhost:8000/api/posts/\").then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.handleFeed = feedName => {\n      axios.get(`http://localhost:8000/api/${feedName}/`).then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.toggleNewConvo = () => {\n      if (this.state.isCreateConvo) {\n        this.setState({\n          isCreateConvo: false\n        });\n      } else {\n        this.setState({\n          isCreateConvo: true\n        });\n      }\n    };\n\n    this.showConvoModal = () => {\n      this.setState({\n        isOpenConvo: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        isOpenConvo: false\n      });\n    };\n\n    this.hideMessageModal = () => {\n      this.setState({\n        isOpenMessage: false\n      });\n    };\n\n    this.handleMessageFormSubmit = event => {\n      event.preventDefault();\n      console.log(event.target);\n      const message = event.target.elements.message.value;\n      const conversation = this.state.currConvoId;\n      axios.post(\"http://localhost:8000/api/messages/\", {\n        message: message,\n        conversation: conversation,\n        isOpenMessage: false\n      });\n      axios.get(\"http://localhost:8000/api/messages/\").then(response => {\n        const messages = response.data;\n        this.setState({\n          messages\n        });\n      });\n    };\n\n    this.showMessageModal = () => {\n      this.setState({\n        isOpenMessage: true\n      });\n    };\n\n    this.state = {\n      isCreateConvo: false,\n      isMessages: false,\n      isThoughts: false,\n      conversations: [],\n      messages: [],\n      thoughts: [],\n      isOpenConvo: false,\n      isOpenMessage: false,\n      setIsOpenConvo: false,\n      selectedDate: \"\",\n      currConvoId: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/conversations/\").then(response => {\n      const conversations = response.data;\n      this.setState({\n        conversations\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/detail\",\n      render: () => /*#__PURE__*/React.createElement(ConvoDetail, {\n        todos: this.state.activeConvo.filter(convo => convo.activeConvo === true),\n        handleToggleComplete: this.handleToggleComplete,\n        handleDelete: this.handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.showConvoModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"New Conversation\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, this.state.isCreateConvo && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 42\n      }\n    }, \"ffff\"), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, this.state.conversations.map(convo => /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: \"18rem\",\n        margin: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"intro1.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => {\n        this.getConvoDetail(convo.id, convo.title);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, convo.title))), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, convo.start_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    }, convo.id)))))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, this.state.messages && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, this.state.isMessages && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }, \"Messages from: \", this.state.activeConvo), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.showMessageModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, \"New Message for \", this.state.activeConvo))), this.state.messages.map(mess => /*#__PURE__*/React.createElement(\"div\", {\n      key: mess.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => {\n        this.getMessageDetail(mess.id, mess.message);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, mess.message), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }), mess.submission_time, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    }), mess.id)))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, this.state.thoughts && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, this.state.isThoughts && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, \"Thoughts from: \", this.state.activeMess), this.state.thoughts.map(thought => /*#__PURE__*/React.createElement(\"div\", {\n      key: thought.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, thought.thought, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 23\n      }\n    }), thought.submission_time)))), /*#__PURE__*/React.createElement(ConvoModal, Object.assign({}, this.state, {\n      handleFormSubmit: this.handleFormSubmit,\n      showConvoModal: this.showConvoModal,\n      hideModal: this.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(MessageModal, Object.assign({}, this.state, {\n      handleMessageFormSubmit: this.handleMessageFormSubmit,\n      showConvoModal: this.showMessageModal,\n      hideModal: this.hideMessageModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/john/Documents/remesh_clone/remesh_clone_fe/src/App.js"],"names":["React","axios","ConvoDetail","NavBar","Container","Row","Col","Card","Modal","Form","Button","InputGroup","BrowserRouter","Router","Route","Link","DatePickerComponent","ConvoModal","MessageModal","App","Component","constructor","props","setSelectedDate","date","setState","selectedDate","handleFormSubmit","event","preventDefault","title","target","elements","value","start_date","console","log","post","isOpenConvo","get","then","response","conversations","data","onHandleChange","e","message","getConvoDetail","convoId","convoTitle","messages","activeConvo","isMessages","currConvoId","getMessageDetail","messId","messTitle","thoughts","activeMess","isThoughts","handleDownVote","postId","pk","posts","handleFeed","feedName","toggleNewConvo","state","isCreateConvo","showConvoModal","hideModal","hideMessageModal","isOpenMessage","handleMessageFormSubmit","conversation","showMessageModal","setIsOpenConvo","componentDidMount","render","filter","convo","handleToggleComplete","handleDelete","map","width","margin","id","mess","submission_time","thought"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport ConvoDetail from \"./components/ConvoDetail\";\nimport NavBar from \"./components/navBar\";\nimport \"./App.css\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  Modal,\n  Form,\n  Button,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport DatePickerComponent from \"./components/DatePicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ConvoModal from \"./components/convoModal\";\nimport MessageModal from \"./components/messageModal\"\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCreateConvo: false,\n      isMessages: false,\n      isThoughts: false,\n      conversations: [],\n      messages: [],\n      thoughts: [],\n      isOpenConvo: false,\n      isOpenMessage: false,\n      setIsOpenConvo: false,\n      selectedDate: \"\",\n      currConvoId: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/conversations/\").then((response) => {\n      const conversations = response.data;\n      this.setState({ conversations });\n    });\n  }\n  setSelectedDate = (date) => {\n    this.setState({\n      selectedDate: date,\n    });\n  };\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const title = event.target.elements.title.value;\n    const start_date = event.target.elements.date.value;\n    console.log(start_date);\n    axios.post(\"http://localhost:8000/api/conversations/\", {\n      title: title,\n      start_date: start_date,\n      isOpenConvo: false,\n    });\n    axios.get(\"http://localhost:8000/api/conversations/\").then((response) => {\n      const conversations = response.data;\n      this.setState({ conversations });\n    });\n  };\n\n  onHandleChange = (e) => {\n    this.setState({\n      message: e.target.value,\n    });\n  };\n\n  getConvoDetail = (convoId, convoTitle) => {\n    console.log(convoId);\n    // console.log(event)\n    // event.preventDefault();\n    axios\n      .get(`http://localhost:8000/api/messages/${convoId}`)\n      .then((response) => {\n        const messages = response.data;\n        this.setState({\n          messages: messages,\n          activeConvo: convoTitle,\n          isMessages: true,\n          currConvoId: convoId\n        });\n      });\n  };\n\n  getMessageDetail = (messId, messTitle) => {\n    console.log(messId);\n    // console.log(event)\n    // event.preventDefault();\n    axios\n      .get(`http://localhost:8000/api/thoughts/${messId}`)\n      .then((response) => {\n        const thoughts = response.data;\n        this.setState({\n          thoughts: thoughts,\n          activeMess: messTitle,\n          isThoughts: true,\n        });\n      });\n  };\n\n  handleDownVote = (postId) => {\n    axios.post(`http://localhost:8000/api/posts/${postId}/down_vote/`, {\n      pk: postId,\n    });\n    axios.get(\"http://localhost:8000/api/posts/\").then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n\n  handleFeed = (feedName) => {\n    axios.get(`http://localhost:8000/api/${feedName}/`).then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n\n  toggleNewConvo = () => {\n    if (this.state.isCreateConvo) {\n      this.setState({\n        isCreateConvo: false,\n      });\n    } else {\n      this.setState({\n        isCreateConvo: true,\n      });\n    }\n  };\n\n  showConvoModal = () => {\n    this.setState({\n      isOpenConvo: true,\n    });\n  };\n  hideModal = () => {\n    this.setState({\n      isOpenConvo: false,\n    });\n  };\n  hideMessageModal = () => {\n    this.setState({\n      isOpenMessage: false\n    });\n  }\n\n  handleMessageFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(event.target)\n    const message = event.target.elements.message.value;\n    const conversation = this.state.currConvoId\n    axios.post(\"http://localhost:8000/api/messages/\", {\n      message: message,\n      conversation: conversation,\n      isOpenMessage: false,\n    });\n    axios.get(\"http://localhost:8000/api/messages/\").then((response) => {\n      const messages = response.data;\n      this.setState({ messages });\n    });\n  }\n\n  showMessageModal = () => {\n    this.setState({\n      isOpenMessage: true,\n    });\n  }\n  render() {\n    return (\n      <Container fluid>\n        <NavBar />\n        <Container fluid>\n        <Route\n          path=\"/detail\"\n          render={() => (\n            <ConvoDetail\n              todos={this.state.activeConvo.filter(convo => convo.activeConvo === true)}\n              handleToggleComplete={this.handleToggleComplete}\n              handleDelete={this.handleDelete}\n            />\n          )}\n        />\n          <Row>\n            <a href=\"#\" onClick={this.showConvoModal}>\n              <h1>New Conversation</h1>\n            </a>\n          </Row>\n          <Row>\n            {this.state.isCreateConvo && <div>ffff</div>}\n            <Col sm={4}>\n              {this.state.conversations.map((convo) => (\n                <Card style={{ width: \"18rem\", margin: \"40px\" }}>\n                  <Card.Img variant=\"top\" src=\"intro1.jpg\" />\n                  <Card.Body>\n                    <Card.Title>\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          this.getConvoDetail(convo.id, convo.title);\n                        }}\n                      >\n                        <h1>{convo.title}</h1>\n                      </a>\n                    </Card.Title>\n                    <Card.Text>\n                      <h3>{convo.start_date}</h3>\n                      <p>{convo.id}</p>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              ))}\n            </Col>\n            <Col sm={4}>\n              {this.state.messages && (\n                <div>\n                  {this.state.isMessages && (\n                    <div>\n                      <h3>Messages from: {this.state.activeConvo}</h3>\n                      <a href=\"#\" onClick={this.showMessageModal}>\n                        <h3>New Message for {this.state.activeConvo}</h3>\n                      </a>\n                    </div>\n                  )}\n                  {this.state.messages.map((mess) => (\n                    <div key={mess.id}>\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          this.getMessageDetail(mess.id, mess.message);\n                        }}\n                      >\n                        {mess.message}\n                      </a>\n                      <br></br>\n                      {mess.submission_time}\n                      <br></br>\n                      {mess.id}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Col>\n            <Col sm={4}>\n              {this.state.thoughts && (\n                <div>\n                  {this.state.isThoughts && (\n                    <h3>Thoughts from: {this.state.activeMess}</h3>\n                  )}\n                  {this.state.thoughts.map((thought) => (\n                    <div key={thought.id}>\n                      {thought.thought}\n                      <br></br>\n                      {thought.submission_time}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Col>\n            <ConvoModal\n              {...this.state}\n              handleFormSubmit={this.handleFormSubmit}\n              showConvoModal={this.showConvoModal}\n              hideModal={this.hideModal}\n            />\n            <MessageModal\n              {...this.state}\n              handleMessageFormSubmit={this.handleMessageFormSubmit}\n              showConvoModal={this.showMessageModal}\n              hideModal={this.hideMessageModal}\n            />\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}