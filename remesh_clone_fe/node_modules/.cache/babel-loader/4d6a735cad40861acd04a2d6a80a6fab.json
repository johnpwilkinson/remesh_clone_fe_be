{"ast":null,"code":"var _jsxFileName = \"/Users/john/Documents/remesh_clone/remesh_clone_fe/src/App.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport ConvoDetail from './components/ConvoDetail';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const post_content = event.target.elements.post_content.value;\n      const boast_or_roast = event.target.elements.boast_or_roast.value;\n      axios.post(\"http://localhost:8000/api/posts/\", {\n        post_content: post_content,\n        boast_or_roast: boast_or_roast\n      });\n      axios.get(\"http://localhost:8000/api/posts/\").then(response => {\n        const posts = response.data;\n        this.setState({\n          posts,\n          message: \"\"\n        });\n      });\n    };\n\n    this.onHandleChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.handleUpVote = postId => {\n      axios.post(`http://localhost:8000/api/posts/${postId}/up_vote/`, {\n        pk: postId\n      });\n      axios.get(\"http://localhost:8000/api/posts/\").then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.handleDownVote = postId => {\n      axios.post(`http://localhost:8000/api/posts/${postId}/down_vote/`, {\n        pk: postId\n      });\n      axios.get(\"http://localhost:8000/api/posts/\").then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.handleFeed = feedName => {\n      axios.get(`http://localhost:8000/api/${feedName}/`).then(response => {\n        const posts = response.data;\n        this.setState({\n          posts\n        });\n      });\n    };\n\n    this.state = {\n      conversations: [],\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/conversations/\").then(response => {\n      const conversations = response.data;\n      this.setState({\n        conversations\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.conversations.map(convo => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, convo.title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, convo.start_date), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, convo.id))), /*#__PURE__*/React.createElement(ConvoDetail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/john/Documents/remesh_clone/remesh_clone_fe/src/App.js"],"names":["React","axios","ConvoDetail","App","Component","constructor","props","handleFormSubmit","event","preventDefault","post_content","target","elements","value","boast_or_roast","post","get","then","response","posts","data","setState","message","onHandleChange","e","handleUpVote","postId","pk","handleDownVote","handleFeed","feedName","state","conversations","componentDidMount","render","map","convo","title","start_date","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport ConvoDetail from './components/ConvoDetail'\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      conversations: [],\n      message: \"\",\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/conversations/\").then((response) => {\n      const conversations = response.data;\n      this.setState({ conversations });\n    });\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const post_content = event.target.elements.post_content.value;\n    const boast_or_roast = event.target.elements.boast_or_roast.value;\n    axios.post(\"http://localhost:8000/api/posts/\", {\n      post_content: post_content,\n      boast_or_roast: boast_or_roast,\n    });\n    axios.get(\"http://localhost:8000/api/posts/\").then((response) => {\n      const posts = response.data;\n      this.setState({ posts, message: \"\" });\n    });\n  };\n\n  onHandleChange = (e) => {\n    this.setState({\n      message: e.target.value,\n    });\n  };\n\n  handleUpVote = (postId) => {\n    axios.post(`http://localhost:8000/api/posts/${postId}/up_vote/`, {\n      pk: postId,\n    });\n    axios.get(\"http://localhost:8000/api/posts/\").then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n\n  handleDownVote = (postId) => {\n    axios.post(`http://localhost:8000/api/posts/${postId}/down_vote/`, {\n      pk: postId,\n    });\n    axios.get(\"http://localhost:8000/api/posts/\").then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n\n  handleFeed = (feedName) => {\n    axios.get(`http://localhost:8000/api/${feedName}/`).then((response) => {\n      const posts = response.data;\n      this.setState({ posts });\n    });\n  };\n  render() {\n    return (\n      <>\n      {this.state.conversations.map(convo => (\n        <div>\n        <h1>{convo.title}</h1>\n        <h3>{convo.start_date}</h3>\n        <p>{convo.id}</p>\n        </div>\n      ))}\n      <ConvoDetail />\n      </>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}